---
http_interactions:
- request:
    method: get
    uri: https://api.themoviedb.org/3/search/movie?api_key=1098280f620c97241161cc71e626fd97&query=Harry
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v2.3.0
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Wed, 20 Jul 2022 19:15:58 GMT
      Server:
      - openresty
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Methods:
      - GET, HEAD, POST, PUT, DELETE, OPTIONS
      Access-Control-Expose-Headers:
      - ETag, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, Retry-After,
        Content-Length, Content-Range
      Cache-Control:
      - public, max-age=600
      Vary:
      - Accept-Encoding
      X-Cache:
      - Hit from cloudfront
      Via:
      - 1.1 371ed2ced863124442eb4fa765ae2a96.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - DEN52-P1
      X-Amz-Cf-Id:
      - Ps6YnOu7Ojk82MnCNjYmfpGg6ibg-HbJjrVE0U5T8zcZwTDEq3h-WA==
      Age:
      - '53'
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Wed, 20 Jul 2022 19:16:51 GMT
- request:
    method: get
    uri: https://api.themoviedb.org/3/search/movie?api_key=1098280f620c97241161cc71e626fd97&page=2&query=Harry
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v2.3.0
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Wed, 20 Jul 2022 19:15:58 GMT
      Server:
      - openresty
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Methods:
      - GET, HEAD, POST, PUT, DELETE, OPTIONS
      Access-Control-Expose-Headers:
      - ETag, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, Retry-After,
        Content-Length, Content-Range
      Cache-Control:
      - public, max-age=600
      Vary:
      - Accept-Encoding
      X-Cache:
      - Hit from cloudfront
      Via:
      - 1.1 f351054a0917e7cc21ba99141c9ae602.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - DEN52-P1
      X-Amz-Cf-Id:
      - vIZdQDtbJzArSfAncGnGzbl4tksOuBb4kuvgecW9UoYmymr6aSHSpw==
      Age:
      - '53'
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Wed, 20 Jul 2022 19:16:51 GMT
recorded_with: VCR 6.1.0
